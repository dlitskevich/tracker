<component id="TaskListPage">
  <TasksList ui:props="<- items.info" />
  <NewItemFacility />
</component>

<component id="TasksList">
  <main scrolledDown="-> items.showMore" scroll="->scrolledDown|dot:value|greater:50">
    <a name="top"></a>
    <Navbar caption="Tasks" badge="{counts|showCounts}">
      <Navbar:right>
        <DbLoadingIndicator isLoading="<-db.isLoading" action="->db.reload" />
        <SearchBarWithSuggestions ui:props="{search}" />
      </Navbar:right>
    </Navbar>

    <AsyncLoader isLoading="{data|not}" title="Loading data" subtitle="ðŸš€ initial dataset" error="<- db.error" onError="-> db.reload">
      <Chips data="{tags}" click="-> items.tag" />
      <EmptyData title="No data" ui:if="data.length|not">
        <ui:else>
          <div class="columns  mx-0">
            <TasksListItem ui:props="{item}" itemClick="{openEntry}" ui:for="item of data" />
          </div>
          <div style="min-height: 7rem;"></div>
        </ui:else>
      </EmptyData>
    </AsyncLoader>
    <a class="centroid s-circle scroll-to-top-button" href="#top" ui:if="{scrolledDown}">â¬†</a>
  </main>
</component>

<component id="TasksListItem">
  <div class="column col-12 col-sm-12 my-1 mx-0">
    <div class="float-right p-2" style="max-height: 1rem;">
      <span class="ml-2 text-gray">{ts|date}</span>
    </div>
    <div class="tile bt-1 p-2" style="border-left: 4px solid {:enums.status|find:@status|dot:color|or:gray};">
      <div class="tile-icon">
        <a href="#/task?itemId={id}">
          <figure class="avatar avatar-l text-large" style="background-color: {:enums.status|find:@status|dot:color|or:gray}!important">
            <img src=":enums.assignee|find:@user|dot:icon" title="{user}"/>
          </figure>
        </a>
      </div>
      <div class="tile-content">
        <a href="#/task?itemId={id}">
          <h6 class="tile-title text-bold text-dark" title="{subject}">{subject|or:@name}</h6>
        </a>
        <div>
          <b class="chip p-2" style="color: {:enums.status|find:@status|dot:color|or:gray}" ui:if="{status}">{status}</b>
          <span class="ml-1" ui:if="{tags}">{tags}</span>
        </div>
      </div>
    </div>
  </div>
</component>

<component id="TaskPageHeader">
  <div style="flex:1; min-height:1.7rem;display:flex;align-items: center;">
    <BackButton href="#/taskList" />
    <h4 class="text-dark text-ellipsis" style="margin-bottom:0; flex:1;max-width:640px;">
        {data.subject}
    </h4>
    <DbLoadingIndicator hot isLoading="<-db.isItemLoading" action="->db.item" data-id="{data.id}" error="<- db.error" />
    <b class="chip p-2" style="color: white; background-color: {:enums.status|find:@data.status|dot:color|or:gray}">{data.status}</b>
    <div class="ml-2">{data.ts|date}</div>
  </div>
</component>

<component id="TaskPage">
  <ItemController ui:ref="controller" itemId="{itemId}" all="<- items.sortedData" upsert="-> db.upsert" />
  <main style="position: relative">
    <Navbar>
      <Navbar:left>
        <TaskPageHeader data="<-controller.item" change="-> controller.change" />
      </Navbar:left>
      <Navbar:right>
      </Navbar:right>
    </Navbar>
    <GroupForma meta=":forms.task" data="<-controller.item" change="-> controller.change" tabs=":itemForm.tabs" groups=":itemForm.groups" />
    <div class="" style="min-height: 3rem"></div>
    <div bottom class="bg-secondary p-2" style="position:absolute;bottom:0;left:0;right:0;display:flex;justify-content: flex-end;">
      <NavListCursor class="flex-1" ui:props="<- controller.itemNavInfo" href="#/task?itemId=" />
      <Btn icon="upload" title="Submit" mode="primary" large action="-> controller.save" busy="<- db.busy" disabled="<- controller.touched|not" />
    </div>
  </main>
</component>

<component id="NewItemFacility">
  <NewItemController ui:ref="newItem" upsert="-> db.upsert" />
  <FAB tooltip="add a new item" action="-> newItem.openAddNew" />
  <TasksCreateModal ui:props="<- newItem.info" />
</component>

<component id="TasksCreateModal">
  <Modal ui:if="{open}" mode="lg" open="{open}" title="Add a new record" close="-> newItem.cancel">
    <GroupForma meta=":forms.task_new" data="{data}" change="->data" />
    <Modal:footer>
      <Btn icon="upload" title="Submit New" mode="primary" large data="{data}" action="-> newItem.submit" busy="<- db.busy" />
    </Modal:footer>
  </Modal>
</component>

<component id="TimeReportField">
  <TimeReportFieldController ui:ref="fieldCtrl" onChange="{onChange}" value="{value}" />
  <div class="bg-white p-2" style="display:grid; grid-template-columns: 1fr 3fr 120px 5fr 40px;column-gap: 10px; row-gap: 10px;">
    <b>Hour</b>
    <b>Status</b>
    <b>Date</b>
    <b>Note</b>
    <Btn title="+" primary class="" action="->fieldCtrl.addReport" />

    <ui:fragment ui:for="report of <-fieldCtrl.visualData">
      <select value="{report.hours}" change="->fieldCtrl.updateField|assignKeyValue:key:hours|assignKeyValue:id:@report.id">
        <option ui:for="option of :enums.hours" selected="{option.id|equals:@report.hours}" value="{option.id}">{option.name}</option>
      </select>
      <select value="{report.status}" change="->fieldCtrl.updateField|assignKeyValue:key:status|assignKeyValue:id:@report.id">
        <option ui:for="option of :enums.hoursStatus" selected="{option.id|equals:@report.status}" value="{option.id}">{option.name}</option>
      </select>
      <input value="{report.date}" type="date" change="->fieldCtrl.updateField|assignKeyValue:key:date|assignKeyValue:id:@report.id" />
      <input value="{report.note}" change="->fieldCtrl.updateField|assignKeyValue:key:note|assignKeyValue:id:@report.id" />
      <Btn title="x" class="" data="{report.id|pack:id}" action="->fieldCtrl.delReport" />
    </ui:fragment>
  </div>
  <div class="m-2 text-gray" ui:if="<-fieldCtrl.visualData|dot:length|not">No Time reports yet.</div>
</component>
