<components>

  <component id="App">
    <ToastService ui:ref="toasters" />
    <MetadataService ui:ref="meta" url="{metaUrl}" lang="{lang}" />
    <AsyncLoader isLoading="<-meta.ready|not" title="ðŸš€ Launching app" subtitle="check for the actual version" error="<-meta.error" onError="-> nav.reload">
      <AuthService ui:ref="auth" authUrl="{:apiBaseUrl}" persistence="local" initialToken=":params.token" afterSignedOut="->nav.reload"/>
      <SignInPage ui:if="<-auth.isSignedIn|not">
        <ui:else>
          <NavigationService ui:ref="nav" title=":app.name" />
          <ApiClientService ui:ref="api" baseUrl="{:apiBaseUrl}" token="<-auth.token" onTokenExpired="-> auth.invalidateToken"/>
          <UserService ui:ref="user" persistence="local" submit="->api.post" />
          <GSheetsService ui:ref="db" kind="tasks" persistence="local" submit="->api.post"/>
          <ItemCollectionController ui:ref="items" data="<- db.items" initials=":app.initialTags" />
          <PageRouter ui:props="<- nav.route" />
          <UserProfileModal data="<-user.info" ui:if="<-user.showProfile" />
        </ui:else>
      </SignInPage>
    </AsyncLoader>
    <ToastList />
  </component>

  <component id="MainPage">
    <TasksList ui:props="<- items.info" />
    <NewItemFacility/>
  </component>

  <component id="TasksList">
    <main scrolledDown="-> items.showMore" scroll="->scrolledDown|dot:value|greater:50">
      <a name="top"></a>
      <Navbar caption=":app.name" badge="{counts|showCounts}">
        <Navbar:right>
          <DbLoadingIndicator isLoading="<-db.isLoading" action="->db.reload"/>
          <SearchBarWithSuggestions ui:props="{search}" />
          <UserBar info="<- user.info" />
        </Navbar:right>
      </Navbar>

      <AsyncLoader isLoading="{data|not}" title="Loading data" subtitle="ðŸš€ initial dataset" error="<- db.error" onError="-> db.reload">
        <Chips data="{tags}" click="-> items.tag"/>
        <EmptyData title="No data" ui:if="data.length|not">
          <ui:else>
            <div class="columns  mx-0">
              <TasksListItem ui:props="{item}" itemClick="{openEntry}" ui:for="item of data" />
            </div>
          </ui:else>
        </EmptyData>
      </AsyncLoader>
    </main>
    <a class="centroid s-circle scroll-to-top-button" href="#top" ui:if="{scrolledDown}">â¬†</a>
  </component>

  <component id="TasksListItem">
    <div class="column col-12 col-sm-12 my-1 mx-0">
      <div class="float-right p-2" style="max-height: 1rem;">
        <b class="text-gray">{user}</b>
        <span class="ml-2 text-gray">{ts|date}</span>
      </div>
      <div class="tile bt-1 p-2">
        <div class="tile-icon">
          <ui:tag tag="{myRole|equals:reviewer|then:b:a}" href="#/task?itemId={id}">
            <figure class="avatar avatar-l text-large" style="background-color: {:enums.status|find:@status|dot:style|or:gray}!important" data-initial="{:enums.type|find:@type|dot:code|or:*}" />
          </ui:tag>
        </div>
        <div class="tile-content">
          <ui:tag tag="{myRole|equals:reviewer|then:b:a}" href="#/task?itemId={id}">
            <h6 class="tile-title text-bold text-dark" title="{subject}">{subject|or:@name}</h6>
          </ui:tag>
          <div>
            <span class="tile-subtitle" ui:if="{subtitle}">{notes}</span>
            <span class="ml-1" ui:if="{tags}">({tags})</span>
          </div>
        </div>
      </div>
      <div class="divider"></div>
    </div>
  </component>

  <component id="TaskPage">
    <ItemController ui:ref="controller" itemId="{itemId}" all="<- items.sortedData" upsert="-> db.upsert" />
    <main>
      <Navbar caption="<- controller.itemTitle" badge="<-controller.item|dot:ts|date">
        <Navbar:left>
          <BackButton href="#/main" />
        </Navbar:left>
        <Navbar:right>
          <DbLoadingIndicator hot isLoading="<-db.isItemLoading" action="->db.item" data="{itemId|pack:id}"/>
          <UserBar info="<- user.info" />
        </Navbar:right>
      </Navbar>
      <AsyncLoader isLoading="<-db.isItemLoading" title="Loading item" subtitle="ðŸš€ wait..." error="<- db.error">
        <TabbedForma meta=":forms.task" data="<-controller.item" change="-> controller.change" tabs=":itemForm.tabs" groups=":itemForm.groups" />
        <div class="" style="min-height: 3rem"></div>
        <FixedPanel bottom class="bg-secondary p-2" style="justify-content: flex-end;">
          <NavListCursor class="flex-1" ui:props="<- controller.itemNavInfo" />
          <Btn icon="upload" title="Submit" mode="primary" large action="-> controller.save" busy="<- db.busy" disabled="<- controller.touched|not"/>
        </FixedPanel>
      </AsyncLoader>
    </main>
  </component>

  <component id="NewItemFacility">
    <NewItemController ui:ref="newItem" upsert="-> db.upsert" />
    <FAB tooltip="add a new item" action="-> newItem.openAddNew" />
    <TasksCreateModal ui:props="<- newItem.info" />
  </component>

  <component id="TasksCreateModal">
    <Modal ui:if="{open}" mode="lg" open="{open}" title="Add a new record" close="-> newItem.cancel">
      <GroupForma meta=":forms.task_new" data="{data}" change="->data" />
      <Modal:footer>
        <Btn icon="upload" title="Submit New" mode="primary" large data="{data}" action="-> newItem.submit" busy="<- db.busy"/>
      </Modal:footer>
    </Modal>
  </component>

  <component id="SignInPage">
    <main class="d-flex" style="height:350px;max-height:500;margin:auto;flex-direction:column;">
      <ui:fragment ui:if="signup.value">
        <ui:then>
          <Navbar caption="Sign Up"/>
          <Forma meta=":signup_form" change="-> data" />
          <div class="flex-1"></div>
          <div bottom class="bg-secondary p-2 d-flex" style="justify-content: flex-end;">
            <a class="flex-1" click="-> signup|assignKeyValue:value:false">Sign In</a>
            <Btn icon="upload" title="Sign up" mode="primary" large data="{data}" action="-> auth.signUp" busy="<- auth.busy"/>
          </div>
        </ui:then>
        <ui:else>
          <Navbar caption="Sign In"/>
          <Forma meta=":sign_in_form" change="-> data" />
          <div class="flex-1"></div>
          <div bottom class="bg-secondary p-2 d-flex" style="justify-content: flex-end;">
            <a class="flex-1" click="-> signup|assignKeyValue:value:true">Sign Up</a>
            <Btn icon="upload" title="Sign in" mode="primary" large data="{data}" action="-> auth.signIn" busy="<- auth.busy"/>
          </div>
        </ui:else>
      </ui:fragment>
    </main>
  </component>

  <component id="UserProfileModal">
    <Modal title="User profile" mode="lg" open="true" close="-> user.showProfile|not">
      <Forma meta=":forms.profile" data="{data}" change="-> data" />
      <Modal:footer>
        <Btn icon="people" title="Save profile" mode="primary" large data="{data}" action="-> user.save" busy="<- user.isLoading"/>
      </Modal:footer>
    </Modal>
  </component>

  <component id="DbLoadingIndicator">
    <Invoke data="{data}" trigger="{data.id}" action="{action}" ui:if="hot"/>
    <ui:fragment ui:if="isLoading">
      <LoadingIndicator class="m-2" />
      <ui:else>
        <a click="{action}" data="{data}" class="m-2">
          <Icon type="refresh"/>
        </a>
      </ui:else>
    </ui:fragment>
  </component>

</components>
